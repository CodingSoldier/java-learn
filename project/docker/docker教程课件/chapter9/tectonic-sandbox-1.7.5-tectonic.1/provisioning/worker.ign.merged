{"ignition":{"config":{},"timeouts":{},"version":"2.1.0"},"networkd":{"units":[{"name":"00-eth1.network","contents":"[Match]\nName=eth1\n\n[Network]\nAddress=172.17.4.201"}]},"passwd":{"users":[{"name":"core","sshAuthorizedKeys":["ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key"]}]},"storage":{"files":[{"filesystem":"root","group":{},"path":"/etc/kubernetes/kubelet.env","user":{},"contents":{"source":"data:,KUBELET_IMAGE_URL%3D%22quay.io%2Fcoreos%2Fhyperkube%22%0AKUBELET_IMAGE_TAG%3D%22v1.7.5_coreos.1%22%0A","verification":{}},"mode":420},{"filesystem":"root","group":{},"path":"/etc/kubernetes/.empty","user":{},"contents":{"source":"data:,empty%0A","verification":{}},"mode":420},{"filesystem":"root","group":{},"path":"/etc/sysctl.d/max-user-watches.conf","user":{},"contents":{"source":"data:,fs.inotify.max_user_watches%3D16184%0A","verification":{}}},{"filesystem":"root","path":"/etc/hostname","contents":{"source":"data:,w1.tectonicsandbox.com","verification":{}},"mode":420,"user":{"id":0},"group":{"id":0}}]},"systemd":{"units":[{"enable":true,"name":"docker.service"},{"mask":true,"name":"locksmithd.service"},{"mask":true,"name":"update-engine.service"},{"contents":"[Unit]\nDescription=Watch for kubeconfig\n[Path]\nPathExists=/etc/kubernetes/kubeconfig\n[Install]\nWantedBy=multi-user.target\n","enable":true,"name":"kubelet.path"},{"contents":"[Unit]\nDescription=Wait for DNS entries\nWants=systemd-resolved.service\nBefore=kubelet.service\n[Service]\nType=oneshot\nRemainAfterExit=true\nExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf > /dev/null; do sleep 1; done'\n[Install]\nRequiredBy=kubelet.service\n","enable":true,"name":"wait-for-dns.service"},{"contents":"[Unit]\nDescription=Kubelet via Hyperkube ACI\n[Service]\nEnvironmentFile=/etc/kubernetes/kubelet.env\nEnvironment=\"RKT_RUN_ARGS=--uuid-file-save=/var/run/kubelet-pod.uuid \\\n  --volume=resolv,kind=host,source=/etc/resolv.conf \\\n  --mount volume=resolv,target=/etc/resolv.conf \\\n  --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n  --mount volume=var-lib-cni,target=/var/lib/cni \\\n  --volume var-log,kind=host,source=/var/log \\\n  --mount volume=var-log,target=/var/log\"\nExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\nExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\nExecStartPre=/bin/mkdir -p /etc/kubernetes/checkpoint-secrets\nExecStartPre=/bin/mkdir -p /etc/kubernetes/inactive-manifests\nExecStartPre=/bin/mkdir -p /var/lib/cni\nExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d > /etc/kubernetes/ca.crt\"\nExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\nExecStart=/usr/lib/coreos/kubelet-wrapper \\\n  --kubeconfig=/etc/kubernetes/kubeconfig \\\n  --require-kubeconfig \\\n  --client-ca-file=/etc/kubernetes/ca.crt \\\n  --anonymous-auth=false \\\n  --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n  --network-plugin=cni \\\n  --lock-file=/var/run/lock/kubelet.lock \\\n  --exit-on-lock-contention \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --allow-privileged \\\n  --hostname-override=w1.tectonicsandbox.com \\\n  --node-labels=node-role.kubernetes.io/node \\\n  --cluster_dns=10.3.0.10 \\\n  --cluster_domain=cluster.local\nExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\nRestart=always\nRestartSec=5\n[Install]\nWantedBy=multi-user.target\n","name":"kubelet.service"}]}}