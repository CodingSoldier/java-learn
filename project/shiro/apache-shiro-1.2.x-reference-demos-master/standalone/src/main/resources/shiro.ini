#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
[main]
# Any realms here will automatically be added to the default created securityManager.  No need to define
# a securityManager here unless you want to override the default. If you want to override the default, you would
# do it by uncommenting this line and specifying the fully qualified class name of your SecurityManager implementation:
# securityManager = my.domain.package.MySecurityManager

# define the realm(s) we want to use for our application.  If you have more than one realm, the order in which they
# are defined is the order in which they will be consulted during the authentication process.
# This simple example uses only a single realm, but you could add more for more complicated requirements.

# We'll use credentials hashing, since that keeps the users' credentials (passwords, private keys, etc) safe:
myRealmCredentialsMatcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher

# now define the realm, and specify that it use the above credentials matcher:
myRealm = MyRealm
myRealm.credentialsMatcher = $myRealmCredentialsMatcher