URL“%编码”规范：
    URL中属于ASCII字符集的非保留字不做编码；
    保留字取其ASCII内码，然后加上“%”前缀对该字符进行编码。
    非ASCII码取其Unicode内码，然后加上“%”前缀将该字符进行编码。

HTTP的BASIC认证：在请求头中加入 Authorization: Basic XXXX

http的长连接是TCP保持长连接

Fiddler是一个代理软件，通过代理拦截请求，默认使用端口8888

Cache-Control 请求/响应头，控制缓存的字段
    no-store 所有内容都不缓存
    no-cache 缓存，但是浏览器使用缓存前，都会请求服务器判断缓存资源是否是最新
    max-age  请求缓存后的X秒内不再发起请求，单位是秒
    s-maxage 代理服务器请求源站点缓存后的X秒内不再发起请求，只对CDN缓存有效
    public   客户端和代理服务器CDN都可缓存
    private  只有客户端可以缓存

Expire，响应头，代表资源过期时间，由服务器返回，在与max-age共存的情况下，优先级要低

CDN是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率


HTTP2.0
    多路复用，请求优化，一个tcp连接可以传输多个http请求；并行发送请求，并行接收响应
    支持服务器推送技术
    压缩了http头，之前接收的http请求头可以保留，下一个请求可能只有请求头中的url发生改变，其他的Origin、Host没有发生改变，就不传了
    强制使用SSL传输协议
    使用二进制分帧技术，将一个HTTP请求数据划分为多个二进制帧，帧数据同时传播




CORS跨域资源共享:
	限制：
		默认允许的方法： GET、HEAD、POST
		默认允许的Content-Type: text/plain、multipart/form-data、application/x-www-form-urlencoded
		请求头也有限制
		XMLHttpRequestUpload对象没有注册任何时间监听
		请求中没有使用ReadableStream对象

	CORS预请求 OPTIONS
		返回的 Response Headers中告诉浏览器CORS允许东西
	response头中的Access-Control-Max-Age控制浏览器发送跨域请求验证的时间

Chrome查看Connection ID可以查看http请求是否属于同一个TCP连接
Chrome查看Request Headers、Response Headers中有Connection:Keep-Alive即为长连接，http发送完，TCP连接不会关闭

response头：
	Cache-Control: max-age=5, s-maxage=20
		max-age=5浏览器缓存时间5秒，代理服务器缓存时间20秒
	Cache-Control: max-age=5, s-maxage=20, private
		private不允许使用代理缓存
	Cache-Control: max-age=5, s-maxage=20, no-store
		no-store所有地方都不使用缓存

使用nginx使用HTTPS
	nginx下新建certs目录。并在目录下生成私钥和证书
	openssl req -x509 -newkey rsa:2048 -nodes -sha256 -keyout localhost-private-key.pem -out localhost-cert.pem
	hosts配置 127.0.0.1       testhttps.com
	访问地址 https://testhttps.com/test/001









